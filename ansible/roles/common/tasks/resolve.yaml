---
- name: Update the /etc/hosts file with node name
  become: yes
  lineinfile:
    path: "/etc/hosts"
    regexp: ".*\t{{ hostvars[item]['ansible_hostname']}}\t{{ hostvars[item]['ansible_hostname']}}"
    line: "{{ hostvars[item]['ansible_env'].SSH_CONNECTION.split(' ')[2] }}\t{{ hostvars[item]['ansible_hostname']}}\t{{ hostvars[item]['ansible_hostname']}}"
    state: present
    backup: yes
  register: etchostsupdate
  when: ansible_hostname != "{{ item }}" or ansible_hostname == "{{ item }}"
  with_items: "{{groups['all']}}"
  tags:
  - resolve

- name: Update netplan config
  become: yes
  shell:
    cmd: "netplan set ethernets.{{ ansible_default_ipv4.interface }}.nameservers.addresses=['{{ nameserver_list | join(\",\") }}']"
  when: nameserver_list is defined and (nameserver_list|length>0)
  tags:
  - resolve

- name: Apply netplan config
  become: yes
  shell:
    cmd: "netplan apply && nslookup {{ nameserver_test }}"
  when: nameserver_list is defined and (nameserver_list|length>0)
  retries: 3
  delay: 3
  register: result
  until: result.rc == 0
  tags:
  - resolve